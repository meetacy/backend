openapi: "3.0.3"
info:
  title: "Meetacy_Backend_Application API"
  description: "Meetacy_Backend_Application API"
  version: "1.0.0"
servers:
- url: "https://api.meetacy.app"
- url: "http://localhost:8080"
tags:
  - name: auth
    description: Authorization and confirmation of mail
  - name: files
    description: Operations about files
  - name: friends
    description: Operations about friends
  - name: meetings
    description: Operations about meetings
  - name: notifications
    description: THIS PART IS NOT CONFIGURED YET
  - name: user
    description: Operations about user

paths:
  /auth/email/confirm:
    post:
      tags:
        - auth
      summary: Email confirmation
      description: "Email confirmation [via gmail, not implemented yet]"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /auth/email/link:
    post:
      tags:
        - auth
      summary: Email linking
      description: "Linking email to account"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /auth/generate:
    post:
      tags:
        - auth
      summary: Access Identity creation
      description: Created access identity for user
      requestBody:
        description: Creation access identity based on nickname
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateIdentityRequest'
      responses:
        default:
          description: An example of a successful generated response with an Access Identity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateIdentityResponse'
  /files/download:
    get:
      summary: Download file from server
      tags:
        - files
      description: "Getting streaming data from the server by File Identity"
      parameters:
      - name: "fileIdentity"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DownloadFileResponse"
        "200":
          description: "OK <br> A file response"
          content:
            application/*:
              schema:
                type: "object"
                format: "binary"
  /files/upload:
    post:
      summary: Uploading a file to the server
      tags:
        - files
      description: "Uploading streaming data to the server. Load Type--MultiPart Data"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /friends/add:
    post:
      tags:
        - friends
      summary: "Add friend"
      description: "User subscription. With a mutual subscription, he becomes a friend"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /friends/delete:
    post:
      summary: Delete friend
      tags:
        - friends
      description: "Unsubscribing from a user, as a result of which he ceases to be your friend"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /friends/get:
    post:
      summary: Get list friends
      tags:
        - friends
      description: "Getting a list of friends and those you follow"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /meetings/avatar/add:
    post:
      summary: Adding meetings avatar
      tags:
        - meetings
      description: "Adding a meeting avatar via an File Identity and Meeting Identity"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /meetings/avatar/delete:
    post:
      summary: Removal meetings avatar
      tags:
        - meetings
      description: "Removal a meeting avatar via an File Identity and Meeting Identity"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /meetings/create:
    post:
      summary: Creating a meeting
      tags:
        - meetings
      description: "Creating a meeting with an identity, name, description, date and location"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /meetings/delete:
    post:
      summary: Deleting a meeting
      tags:
        - meetings
      description: "Removing a meeting from the database"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /meetings/get:
    post:
      summary: Getting meeting information
      tags:
        - meetings
      description: "Getting information about a meeting object"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /meetings/list:
    post:
      summary: Getting a list of meetings
      tags:
        - meetings
      description: "Getting a list of meetings by accessIdentity"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /meetings/participate:
    post:
      summary: Participate meeting
      tags:
        - meetings
      description: "Taking part in a meeting"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /notifications/get:
    post:
      tags:
        - notifications
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /notifications/read:
    post:
      tags:
        - notifications
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /users/avatar/add:
    post:
      summary: Adding user avatar
      tags:
        - user
      description: "Adding a user avatar via an File Identity and Access Identity"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /users/avatar/delete:
    post:
      summary: Deleting user avatar
      tags:
        - user
      description: "Deleting a user avatar via an File Identity and Access Identity"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /users/get:
    post:
      summary: Getting user object
      tags:
        - user
      description: "Getting user data. Nickname, Identity [not to be confused with accessIdentity] and email verification status"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
components:
  schemas:
    DownloadFileResponse:
      type: "object"
      properties:
        status:
          type: "boolean"
        errorCode:
          type: "integer"
          format: "int32"
        errorMessage:
          type: "string"
    GenerateIdentityRequest:
      type: "object"
      properties:
        nickname:
          type: "string"
          enum:
            - David Johnson
      required:
        - "nickname"
      additionalProperties: false
    GenerateIdentityResponse:
      type: "object"
      properties:
        status:
          type: "boolean"
          enum:
            - true
        result:
          type: "string"
          enum:
            - "114:sfh4wb9HcVfepczRAznfgcnDfru21IRChLP6OvA5CIOMP7xPX3hQfVg8XzfOASykajyZidQxdouQOENDQIsDaK9M7DH2G0AEh6f6Wgw6brZdv1kNPrtANltUEECuzV8U2GlUH3TQppP9w8yh62ldg0t3fOCnyOELR0FZ9kj3UuE1uNPVLO8jTnjKj5BYZioc5xLWOZPNxmcmK1HsnKXQMj3gCxNTbHCg65z3TpA1C6espTsGAYY5SojAr8pUYzrg"
      required:
      - "status"
      - "result"
      additionalProperties: false