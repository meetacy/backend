[versions]

kotlin = "1.9.0"
coroutines = "1.6.0"
serialization = "1.3.2"
ktor = "2.2.3"
rsocket = "0.15.4"
exposed = "0.41.1"

postgresql = "42.2.24"
slf4jJ = "1.7.32"
logback = "1.2.6"
ssh = "2.10.1"
shadow = "7.0.0"

wdater = "0.0.2"
meetacySdk = "0.0.58"
meetacyDi = "0.0.23"

[libraries]

# slf4j
slf4jSimple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4jJ" }

coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# exposed
exposedCore = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposedJdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

# meetacy
mdi = { module = "app.meetacy.di:core", version.ref = "meetacyDi" }

# ktor

ktorClient-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorClient-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktorClient-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorClient-serializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

ktorServer-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktorServer-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktorServer-rsocket = { module = "io.rsocket.kotlin:rsocket-ktor-server", version.ref = "rsocket" }
ktorServer-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktorServer-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktorServer-serializationJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorServer-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktorServer-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }
ktorServer-partialContent = { module = "io.ktor:ktor-server-partial-content", version.ref = "ktor" }
ktorServer-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktorServer-autoHead = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktorServer-requestValidation = { module = "io.ktor:ktor-server-request-validation", version.ref = "ktor" }
ktorServer-serverStatusPage = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }

# gradle

kotlinGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
serializationGradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
shadowGradle = { module = "gradle.plugin.com.github.jengelman.gradle.plugins:shadow", version.ref = "shadow" }
sshGradle = { module = "org.hidetake:gradle-ssh-plugin", version.ref = "ssh" }

[plugins]

deploy = { id = "deploy-convention" }
backend = { id = "backend-app-convention" }
shadow = { id = "com.github.johnrengelman.shadow" }
ssh = { id = "org.hidetake.ssh" }
